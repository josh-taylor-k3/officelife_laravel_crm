name: Docker image

on:
  schedule:
    - cron:  '0 0 * * *'

jobs:
  package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [7.4]

    outputs:
      package: ${{ steps.package.outputs.package }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none

    # Composer
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer files
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
            ${{ runner.os }}-composer-

    # Yarn
      - name: Get yarn cache directory path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn files
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-yarn-

      - name: Create package
        id: package
        run: scripts/package.sh 'main'

      - name: Store package
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: ${{ steps.package.outputs.package }}

  docker:
    runs-on: ubuntu-latest
    needs: package
    strategy:
      matrix:
        variant: [apache, fpm, fpm-alpine]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          repository: officelifehq/docker
          submodules: true

      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: package
          path: package

      - name: Copy package
        run: cp package/${{ needs.package.outputs.package }} main/${{ matrix.variant }}/officelife-main.tar.bz2

      - name: Add commit number
        run: sed -i 's/\(org\.opencontainers\.image\.revision="\)/\1${{ github.sha }}/' main/${{ matrix.variant }}/Dockerfile

      - name: Update base image
        run: docker pull php:7.4-${{ matrix.variant }}

      - name: Docker build
        run: |
          docker build main/${{ matrix.variant }} -t officelife:${{ matrix.variant }}
          docker images

      - name: Publish package
        if: github.ref == 'refs/heads/main'
        run: |
          echo "$password" | docker login ghcr.io -u $username --password-stdin
          docker tag officelife:${{ matrix.variant }} ghcr.io/officelifehq/officelife-dev:main-${{ matrix.variant }}
          docker push ghcr.io/officelifehq/officelife-dev:main-${{ matrix.variant }}
        env:
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_PAT }}
